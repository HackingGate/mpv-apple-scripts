name: build

on:
  push:
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"
  workflow_dispatch:

jobs:
  build-openssl:
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: x86_64
            xcode-version: '14.3.1'
          - os: macos-13
            arch: arm64
            xcode-version: '14.3.1'
      fail-fast: false
    runs-on: ${{ matrix.os }}
    outputs:
      cache-hit: ${{ steps.openssl-cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
      - name: Restore OpenSSL cache
        id: openssl-cache
        uses: actions/cache@v4
        with:
          path: ./openssl
          key: openssl-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-${{ hashFiles('install-openssl.sh') }}
          restore-keys: |
            openssl${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ matrix.xcode-version }}
      - name: Build OpenSSL
        if: steps.openssl-cache.outputs.cache-hit != 'true'
        run: |
          ./install-openssl.sh
      - name: List files
        run: |
          ls -al ./openssl
      - name: Save OpenSSL cache
        if: steps.openssl-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v4
        with:
          path: ./openssl
          key: openssl-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-${{ hashFiles('install-openssl.sh') }}
          restore-keys: |
            openssl${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-
      - name: Upload OpenSSL artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openssl-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-${{ hashFiles('install-openssl.sh') }}
          path: ./openssl

  build:
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: x86_64
            xcode-version: '14.3.1'
          - os: macos-13
            arch: arm64
            xcode-version: '14.3.1'
      fail-fast: false
    runs-on: ${{ matrix.os }}
    needs: build-openssl
    steps:
      - uses: actions/checkout@v4
      - name: Restore scratch ios cache
        id: scratch-cache-ios
        uses: actions/cache@v4
        with:
          path: ./scratch-ios
          key: scratch-ios-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-${{ hashFiles('build.sh') }}
          restore-keys: |
            scratch-ios-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-
      - name: Restore scratch tv cache
        id: scratch-cache-tv
        uses: actions/cache@v4
        with:
          path: ./scratch-tv
          key: scratch-tv-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-${{ hashFiles('build.sh') }}
          restore-keys: |
            scratch-tv-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ matrix.xcode-version }}      
      - name: Install Dependencies
        if: steps.scratch-cache-ios.outputs.cache-hit != 'true' && steps.scratch-cache-tv.outputs.cache-hit != 'true'
        run: |
          brew install --build-from-source --only-dependencies --formula mpv
          brew install python-setuptools
      - name: Download OpenSSL artifact
        if: steps.scratch-cache-ios.outputs.cache-hit != 'true' && steps.scratch-cache-tv.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v4
        with:
          name: openssl-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-${{ hashFiles('install-openssl.sh') }}
          path: ./openssl
      - name: Clean and Download
        if: steps.scratch-cache-ios.outputs.cache-hit != 'true' && steps.scratch-cache-tv.outputs.cache-hit != 'true'
        run: |
          ./clean.sh && ./download.sh
      - name: Build
        if: steps.scratch-cache-ios.outputs.cache-hit != 'true' && steps.scratch-cache-tv.outputs.cache-hit != 'true'
        run: |
          ./build.sh
      - name: List files
        run: |
          ls -al .
      - name: Store scratch ios cache
        uses: actions/cache@v4
        with:
          path: ./scratch-ios
          key: scratch-ios-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-${{ hashFiles('build.sh') }}
          restore-keys: |
            scratch-ios-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-
      - name: Store scratch tv cache
        uses: actions/cache@v4
        with:
          path: ./scratch-tv
          key: scratch-tv-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-${{ hashFiles('build.sh') }}
          restore-keys: |
            scratch-tv-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-
      - name: Upload scratch ios
        uses: actions/upload-artifact@v4
        with:
          name: scratch-ios-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-${{ hashFiles('build.sh') }}
          path: ./scratch-ios
      - name: Upload scratch tv
        uses: actions/upload-artifact@v4
        with:
          name: scratch-tv-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-${{ hashFiles('build.sh') }}
          path: ./scratch-tv

  build-xcframework:
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: x86_64
            xcode-version: '14.3.1'
          - os: macos-13
            arch: arm64
            xcode-version: '14.3.1'
      fail-fast: false
    runs-on: ${{ matrix.os }}
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ matrix.xcode-version }}
      - name: Download scratch ios
        uses: actions/download-artifact@v4
        with:
          name: scratch-ios-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-${{ hashFiles('build.sh') }}
      - name: Download scratch tv
        uses: actions/download-artifact@v4
        with:
          name: scratch-tv-${{ runner.os }}-${{ matrix.os }}-${{ matrix.arch }}-xcode-${{ matrix.xcode-version }}-${{ hashFiles('build.sh') }}
      - name: Build xcframework
        run: |
          ./xcframework.sh
      - name: List files
        run: |
          ls -al .
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: ./lib
